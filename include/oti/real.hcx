
typedef struct{
    coeff_t*       p_data;
    uint64_t       nrows;
    uint64_t       ncols;
    uint64_t        size;
} darr_t;
void der_r_atan2(coeff_t x, coeff_t y, ord_t order, coeff_t* derivs);
void der_r_logb(coeff_t x, coeff_t base, ord_t order, coeff_t* derivs);
void der_r_log10(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_atanh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_asinh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_acosh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_tanh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_sqrt(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_cosh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_sinh(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_asin(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_acos(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_atan(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_tan(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_cos(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_sin(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_log(coeff_t x , ord_t order, coeff_t* derivs);
void der_r_exp(coeff_t x, ord_t order, coeff_t* derivs);
void der_r_pow(coeff_t x, coeff_t e, ord_t order, coeff_t* derivs);
void darr_matmul(darr_t* arr1, darr_t* arr2, darr_t* aRes );
void darr_transpose(darr_t* arr1, darr_t* aRes);
void darr_invert(darr_t* arr1, darr_t* aRes);
coeff_t darr_det( darr_t* arr1 );
void darr_neg_to(darr_t* arr1, darr_t* aRes);
darr_t darr_neg(darr_t* arr1);
darr_t darr_div_RR(darr_t* arr1, darr_t* arr2);
darr_t darr_div_Rr(darr_t* arr1, coeff_t num);
darr_t darr_div_rR(coeff_t num, darr_t* arr1);
void darr_div_RR_to(darr_t* arr1, darr_t* arr2, darr_t* aRes);
void darr_div_Rr_to(darr_t* arr1, coeff_t num, darr_t* aRes);
void darr_div_rR_to(coeff_t num, darr_t* arr2, darr_t* aRes);
darr_t darr_mul_RR(darr_t* arr1, darr_t* arr2);
arr_t darr_mul_rR(coeff_t num, darr_t* arr1);
void darr_mul_RR_to(darr_t* arr1, darr_t* arr2, darr_t* aRes);
void darr_mul_rR_to(coeff_t num, darr_t* arr1, darr_t* aRes);
darr_t darr_sub_RR(darr_t* arr1, darr_t* arr2);
darr_t darr_sub_Rr(darr_t* arr1, coeff_t num);
darr_t darr_sub_rR(coeff_t num, darr_t* arr1);
void darr_sub_RR_to(darr_t* arr1, darr_t* arr2, darr_t* aRes);
void darr_sub_Rr_to(darr_t* arr1, coeff_t num, darr_t* aRes);
void darr_sub_rR_to(coeff_t num, darr_t* arr1, darr_t* aRes);
darr_t darr_sum_RR(darr_t* arr1, darr_t* arr2);
darr_t darr_sum_rR(coeff_t num, darr_t* arr1);
void darr_sum_RR_to(darr_t* arr1, darr_t* arr2, darr_t* aRes);
void darr_sum_rR_to(coeff_t num, darr_t* arr1, darr_t* aRes);
void darr_set_all( coeff_t num, darr_t* arr);
coeff_t darr_get_item_ij(darr_t* arr, uint64_t i, uint64_t j);
coeff_t darr_get_item_i(darr_t* arr, uint64_t i);
void darr_set_item_ij( coeff_t num, uint64_t i, uint64_t j, darr_t* arr);
void darr_set_item_i( coeff_t num, uint64_t i, darr_t* arr);
darr_t   darr_copy(darr_t* src );
void     darr_copy_to(darr_t* src, darr_t* dst );
uint64_t darr_getSize(darr_t* arr);
darr_t darr_ones( uint64_t nrows, uint64_t ncols);
darr_t darr_zeros( uint64_t nrows, uint64_t ncols);
void darr_free(darr_t* arr);
darr_t darr_createEmpty( uint64_t nrows, uint64_t ncols);
