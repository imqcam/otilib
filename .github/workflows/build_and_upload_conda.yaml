name: Build and upload conda package

on:
  # release:
  #   types: [published]
  push:
    branches:
      - conda_package

jobs:
  build_and_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest]
        arch: [x86_64, arm64]
        # exclude:
        #   - os: ubuntu-latest
        #     arch: arm64
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: pyoti
        auto-update-conda: true
        python-version: 3.9
        channels: conda-forge,defaults
        channel-priority: strict
    - name: Set environment variable for sourcing conda (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "RUNNER_OS_SOURCE=/home/runner/.bashrc" >> $GITHUB_ENV
    - name: Set environment variable for sourcing conda (Mac)
      if: runner.os == 'macOS'
      run: |
        echo "RUNNER_OS_SOURCE=/Users/runner/.bash_profile" >> $GITHUB_ENV
    - name: Install build tools (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        conda init bash
        source $RUNNER_OS_SOURCE
        conda activate pyoti
        conda install -y conda-build anaconda-client conda-verify
    - name: Install build tools (Windows)
      if: runner.os == 'Windows'
      run: |
        conda init cmd.exe
        conda activate pyoti
        conda install -y conda-build anaconda-client conda-verify
    - name: Set CONDA_SUBDIR based on architecture
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "CONDA_SUBDIR=linux-64" >> $GITHUB_ENV
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo "CONDA_SUBDIR=linux-arm64" >> $GITHUB_ENV
          fi
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "CONDA_SUBDIR=osx-64" >> $GITHUB_ENV
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo "CONDA_SUBDIR=osx-arm64" >> $GITHUB_ENV
          fi
        fi
    - name: Configure Conda for the correct subdir (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        source $RUNNER_OS_SOURCE
        conda activate pyoti
        conda config --env --set subdir $CONDA_SUBDIR
    - name: Configure Conda for the correct subdir (Windows)
      if: runner.os == 'Windows'
      run: |
        conda activate pyoti
        conda config --env --set subdir $CONDA_SUBDIR
    - name: Build Conda package (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        source $RUNNER_OS_SOURCE
        conda activate pyoti
        conda build conda
    - name: Build Conda package (Windows)
      if: runner.os == 'Windows'
      run: |
        conda activate pyoti
        conda build conda
    - name: Upload Conda package (Linux/Mac)
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      if: runner.os != 'Windows'
      run: |
        source $RUNNER_OS_SOURCE
        conda activate pyoti
        PACKAGE_PATH=$(conda build conda --output)
        anaconda -t $ANACONDA_TOKEN upload -u eminizer $PACKAGE_PATH --channel main --label main --force
    - name: Upload Conda package (Windows)
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      if: runner.os == 'Windows'
      run: |
        conda activate pyoti
        PACKAGE_PATH=$(conda build conda --output)
        anaconda -t $ANACONDA_TOKEN upload -u eminizer $PACKAGE_PATH --channel main --label main --force