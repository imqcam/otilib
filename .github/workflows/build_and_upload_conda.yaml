name: Build and upload conda package

on:
  # release:
  #   types: [published]
  push:
    branches:
      - conda_package

jobs:
  build_and_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: pyoti
        auto-update-conda: true
        python-version: 3.9
        channels: conda-forge,defaults
        channel-priority: strict
    - name: Install conda-build and anaconda (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        conda init bash
        if [[ $RUNNER_OS == "Linux" ]]; then
          source /home/runner/.bashrc
        elif [[ $RUNNER_OS == "macOS" ]]; then
          source /Users/runner/.bash_profile
        fi
        conda activate pyoti
        conda install -y conda-build anaconda-client
    - name: Install conda-build and anaconda (Windows)
      if: runner.os == 'Windows'
      run: |
        conda init cmd.exe
        conda activate pyoti
        conda install -y conda-build anaconda-client
    - name: Build Conda package (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        conda init bash
        if [[ $RUNNER_OS == "Linux" ]]; then
          source /home/runner/.bashrc
        elif [[ $RUNNER_OS == "macOS" ]]; then
          source /Users/runner/.bash_profile
        fi
        conda activate pyoti
        conda build conda
    - name: Build Conda package (Windows)
      if: runner.os == 'Windows'
      run: |
        conda init cmd.exe
        conda activate pyoti
        conda build conda
    - name: Upload Conda package (Linux/Mac)
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      if: runner.os != 'Windows'
      run: |
        conda init bash
        if [[ $RUNNER_OS == "Linux" ]]; then
          source /home/runner/.bashrc
        elif [[ $RUNNER_OS == "macOS" ]]; then
          source /Users/runner/.bash_profile
        fi
        conda activate pyoti
        PACKAGE_PATH=$(conda build conda --output)
        anaconda -t $ANACONDA_TOKEN upload -u eminizer $PACKAGE_PATH --channel main --label main
    - name: Upload Conda package (Windows)
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      if: runner.os == 'Windows'
      run: |
        conda init cmd.exe
        conda activate pyoti
        PACKAGE_PATH=$(conda build conda --output)
        anaconda -t $ANACONDA_TOKEN upload -u eminizer $PACKAGE_PATH --channel main --label main
